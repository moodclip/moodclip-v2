steps:
# Step 1: Build the container image using Docker
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE}:${COMMIT_SHA}', '.']

# Step 2: Push the built image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE}:${COMMIT_SHA}']

# Step 3: Deploy the new container image to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: gcloud
  args:
    - 'run'
    - 'deploy'
    - '${_SERVICE}'
    - '--image'
    - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE}:${COMMIT_SHA}'
    - '--region'
    - '${_REGION}'
    - '--service-account'
    - 'mf-backend-sa@${PROJECT_ID}.iam.gserviceaccount.com'
    - '--allow-unauthenticated'
    - '--min-instances'
    - '0'
    - '--max-instances'
    - '2'
    - '--cpu'
    - '1'
    - '--memory'
    - '512Mi'
    - '--concurrency'
    - '80'
    - '--set-secrets=DATABASE_URL=DATABASE_URL:latest,SHOPIFY_API_KEY=SHOPIFY_API_KEY:latest,SHOPIFY_API_SECRET=SHOPIFY_API_SECRET:latest'
    # FINAL FIX: Escaped the comma within the SCOPES value with a backslash.
    - '--set-env-vars=GCS_BUCKET=mf-uploads-prod,SCOPES=read_products\,write_script_tags,SHOPIFY_APP_URL=https://placeholder.run.app'
    - '--add-cloudsql-instances'
    - '${_SQL_CONNECTION_NAME}'

images:
- '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE}:${COMMIT_SHA}'

substitutions:
  _SERVICE: mf-backend
  _REPOSITORY: backend
  _REGION: us-central1
  _SQL_CONNECTION_NAME: 'moodflow-464810:us-central1:moodflow-postgres'

# Send build logs directly to Cloud Logging
options:
  logging: CLOUD_LOGGING_ONLY
